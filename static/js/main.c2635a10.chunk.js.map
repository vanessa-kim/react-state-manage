{"version":3,"sources":["atoms.ts","components/CreateToDo.tsx","components/CreateCategory.tsx","components/SelectCategory.tsx","components/ToDo.tsx","components/List.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["categoryState","atom","key","default","category","selectedCategory","toDoState","toDoSelector","selector","get","toDos","filter","toDo","AddForm","styled","form","CreateToDo","useForm","register","handleSubmit","setValue","useRecoilState","setToDos","useEffect","strToDos","localStorage","getItem","jsonToDos","JSON","parse","length","useRecoilValue","setItem","stringify","onSubmit","oldToDos","text","id","Date","now","required","placeholder","Form","CreateCategory","categories","setCategories","strCategories","jsonCategories","oldCategories","Select","select","SelectCategory","setCategory","value","onInput","event","currentTarget","map","item","DoList","li","BtnGp","div","ChkBtn","button","ToDo","useSetRecoilState","onClick","name","targetIndex","findIndex","todo","newToDo","slice","editToDos","splice","List","Wrapper","Title","h1","Label","strong","ToDoList","GlobalStyle","createGlobalStyle","props","theme","bgColor","textColor","App","ReactDOM","render","StrictMode","accentColor","cardColor","cardBorderColor","document","getElementById"],"mappings":"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","file":"static/js/main.c2635a10.chunk.js","sourcesContent":["import { atom, selector } from 'recoil';\r\n\r\nexport interface ICategory {\r\n  category: string;\r\n}\r\n\r\nexport interface IToDo {\r\n  text: string;\r\n  id: number;\r\n  category: string;\r\n}\r\n\r\n\r\nexport const categoryState = atom<ICategory[]>({\r\n  key: 'category',\r\n  default: [\r\n    { category: 'TO_DO' },\r\n    { category: 'DOING' },\r\n    { category: 'DONE' },\r\n  ],\r\n});\r\n\r\nexport const selectedCategory = atom<string>({\r\n  key: 'selectedCategory',\r\n  default: 'TO_DO',\r\n});\r\n\r\nexport const toDoState = atom<IToDo[]>({\r\n  key: 'toDo',\r\n  default: [],\r\n});\r\n\r\nexport const toDoSelector = selector({\r\n  key: 'toDoSelector',\r\n  get: ({ get }) => {\r\n    const toDos = get(toDoState);\r\n    const category = get(selectedCategory);\r\n    return toDos.filter(toDo => toDo.category === category);\r\n  }\r\n});\r\n","import { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { selectedCategory, toDoState, IToDo } from '../atoms';\r\n\r\nconst AddForm = styled.form`\r\n  display: flex;\r\n  padding: 20px;\r\n  border: 1px solid #fff;\r\n  border-radius: 5px;\r\n  margin-bottom: 20px;\r\n\r\n  input {\r\n    border: 0;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    width: calc(100% - 100px);\r\n    margin-right: 6px;\r\n    box-shadow: 0 5px 5px rgba(0,0,0,0.1);\r\n  }\r\n\r\n  button {\r\n    width: 94px;\r\n    border: 0;\r\n    border-radius: 5px;\r\n    background-color: #e94d4f;\r\n    color: #fff;\r\n    box-shadow: 0 5px 5px rgba(0,0,0,0.1);\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background-color: #d54648;\r\n    }\r\n    &:active {\r\n      background-color: #c73f41;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IForm {\r\n  toDo: string;\r\n}\r\n\r\nfunction CreateToDo() {\r\n  const { register, handleSubmit, setValue } = useForm<IForm>();\r\n  const [toDos, setToDos] = useRecoilState<IToDo[]>(toDoState);\r\n  \r\n  // initial load from localstorage\r\n  useEffect(()=>{\r\n    const strToDos = localStorage.getItem('toDos');\r\n    const jsonToDos = strToDos && JSON.parse(strToDos);\r\n    if (jsonToDos && jsonToDos.length > 0) {\r\n      setToDos(jsonToDos);\r\n    }\r\n  }, []);\r\n\r\n  const category = useRecoilValue(selectedCategory);\r\n  const handleValid = ({ toDo }: IForm) => {\r\n    setValue('toDo', '');\r\n    setToDos((oldToDos)=> [\r\n        { text: toDo, id: Date.now(), category }, \r\n        ...oldToDos, \r\n      ]);\r\n  }; \r\n  \r\n  // set localstorage everytime changes toDos\r\n  useEffect(()=>{\r\n    localStorage.setItem('toDos', JSON.stringify(toDos));\r\n  }, [toDos]);\r\n\r\n  return (\r\n    <AddForm onSubmit={handleSubmit(handleValid)}>\r\n      <input \r\n        {...register('toDo', {\r\n          required: 'Please write a To Do.'\r\n        })} \r\n        placeholder=\"write a to do\" \r\n      />\r\n      <button>Add</button>\r\n    </AddForm>\r\n  );\r\n};\r\n\r\nexport default CreateToDo;","import { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useRecoilState } from 'recoil';\r\nimport styled from 'styled-components';\r\nimport { categoryState } from '../atoms';\r\n\r\nconst Form = styled.form`\r\n  padding: 10px;\r\n  width: 100%;\r\n\r\n  input {\r\n    border: 0;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    width: calc(100% - 100px);\r\n    margin-right: 6px;\r\n    box-shadow: 0 5px 5px rgba(0,0,0,0.1);\r\n  }\r\n\r\n  button {\r\n    width: 94px;\r\n    border-radius: 5px;\r\n    border: 0;\r\n    height: 36px;\r\n    color: #fff;\r\n    background-color: #e94d4f;\r\n    box-shadow: 0 5px 5px rgba(0,0,0,0.1);\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background-color: #d54648;\r\n    }\r\n    &:active {\r\n      background-color: #c73f41;\r\n    }\r\n  }\r\n`;\r\ninterface ICategory {\r\n  category: string;\r\n}\r\n\r\nfunction CreateCategory() {\r\n  const { register, handleSubmit, setValue } = useForm<ICategory>();\r\n  const [categories, setCategories] = useRecoilState<ICategory[]>(categoryState);\r\n  const handleValid = ({ category }: ICategory) => {\r\n    setValue('category', '');\r\n    setCategories((oldCategories) => [\r\n      { category },\r\n      ...oldCategories,\r\n    ]);\r\n  } \r\n\r\n  // initial load from localstorage\r\n  useEffect(() => {\r\n    const strCategories = localStorage.getItem('categories');\r\n    const jsonCategories = strCategories && JSON.parse(strCategories);\r\n    if (jsonCategories && jsonCategories.length > 0) {\r\n      setCategories(jsonCategories);\r\n    }\r\n  }, []);\r\n\r\n  // set localstorage evertime changes categories\r\n  useEffect(()=>{\r\n    localStorage.setItem('categories', JSON.stringify(categories));\r\n  }, [categories]);\r\n  return (\r\n    <Form onSubmit={handleSubmit(handleValid)}>\r\n      <input \r\n        {...register('category', {\r\n          required: 'Please write a new category'\r\n        })} \r\n          placeholder=\"wirte a new category\" \r\n        />\r\n      <button>Add</button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default CreateCategory;","import { categoryState, selectedCategory } from '../atoms'; \r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport styled from 'styled-components';\r\n\r\nconst Select = styled.select`\r\n  width: 200px;\r\n  height: 36px;\r\n  border-radius: 5px;\r\n  border: 1px solid #fff;\r\n  padding: 0 10px;\r\n  margin-bottom: 20px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nfunction SelectCategory() {\r\n  const categories = useRecoilValue(categoryState);\r\n  const [category, setCategory] = useRecoilState(selectedCategory);\r\n  const onInput = (event:React.FormEvent<HTMLSelectElement>) => {\r\n    setCategory(event.currentTarget.value as any);\r\n  };\r\n  return (\r\n    <Select value={category} onInput={onInput}>\r\n      { categories.map(item => (\r\n        <option value={item.category} key={item.category}>\r\n          {item.category}\r\n        </option>\r\n      ))}\r\n    </Select>\r\n);\r\n}\r\n\r\nexport default SelectCategory;","import React from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { IToDo, toDoState } from \"../atoms\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DoList = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-color: rgba(255, 255, 255, 0.15);\r\n  padding: 20px;\r\n  margin-top: 10px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 10px 10px rgba(0, 0, 0, 0.1);\r\n  \r\n  span {\r\n    width: auto;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    padding-right: 10px;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nconst BtnGp = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n\r\n\r\nconst ChkBtn = styled.button`\r\n  width: 70px;\r\n  height: 30px;\r\n  font-size: 13px;\r\n  border-radius: 30px;\r\n  border: 0;\r\n  margin: 0 3px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #f1e8cf;\r\n  }\r\n  \r\n  &:active {\r\n    background-color: #f3dfa9;\r\n  }\r\n`;\r\n\r\nfunction ToDo({ text, category, id }: IToDo) {\r\n  const setToDos = useSetRecoilState(toDoState);\r\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    const { currentTarget: { name }} = event;\r\n    setToDos(oldToDos => {\r\n      const targetIndex = oldToDos.findIndex(todo => todo.id === id);\r\n      const newToDo = { text, id, category: name as any};\r\n      return [\r\n        ...oldToDos.slice(0, targetIndex), \r\n        newToDo, \r\n        ...oldToDos.slice(targetIndex + 1)\r\n      ];\r\n    });\r\n  };\r\n  const deleteToDo = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setToDos(oldToDos => {\r\n      const targetIndex = oldToDos.findIndex(todo => todo.id === id);\r\n      const editToDos = [...oldToDos];\r\n      editToDos.splice(targetIndex, 1);\r\n      return editToDos;\r\n    });\r\n  };\r\n  return (\r\n    <DoList>\r\n      <span>{text}</span>\r\n      <BtnGp>\r\n        {category !== 'DOING' &&<ChkBtn name=\"DOING\" onClick={onClick}>Doing</ChkBtn>}\r\n        {category !== 'TO_DO' &&<ChkBtn name=\"TO_DO\" onClick={onClick}>To Do</ChkBtn>}\r\n        {category !== 'DONE' && <ChkBtn name=\"DONE\" onClick={onClick}>Done</ChkBtn>}\r\n        {<ChkBtn onClick={deleteToDo}>Delete</ChkBtn>}\r\n      </BtnGp>\r\n    </DoList>\r\n  );\r\n}\r\n\r\nexport default ToDo;","import ToDo from './ToDo';\r\nimport { toDoSelector } from '../atoms'; \r\nimport { useRecoilValue } from 'recoil';\r\n\r\nfunction List() {\r\n  const toDos = useRecoilValue(toDoSelector);\r\n  return (\r\n    <>\r\n      {toDos?.map(toDo => (<ToDo key={toDo.id} {...toDo}/>))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default List;","import CreateToDo from './CreateToDo';\r\nimport CreateCategory from './CreateCategory';\r\nimport SelectCategory from './SelectCategory';\r\nimport List from './List';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 50px;\r\n  max-width: 700px;\r\n  margin: 0 auto;\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: 40px;\r\n  line-height: 60px;\r\n  text-align: center;\r\n`;\r\nconst AddForm = styled.div`\r\n  display: flex;\r\n`;\r\nconst Label = styled.strong`\r\n  font-size: 18px;\r\n  min-width: 200px;\r\n  color: white;\r\n  line-height: 50px;\r\n`;\r\nfunction ToDoList() {\r\n  return (\r\n    <Wrapper>\r\n      <Title>To Dos</Title>\r\n      <hr />\r\n      <AddForm>\r\n        <Label>New category</Label>\r\n        <CreateCategory></CreateCategory>\r\n      </AddForm>\r\n      <hr />\r\n      <SelectCategory />\r\n      <CreateToDo />\r\n      <List />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ToDoList;","import { createGlobalStyle } from 'styled-components';\nimport ToDoList from './components/ToDoList';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: 'Source Sans Pro', sans-serif;\n    background: ${props => props.theme.bgColor};\n    color: ${props => props.theme.textColor};\n    height: 100vh;\n  }\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n  hr {\n    border: 0;\n    border-top: 1px solid #fff;\n  }\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { RecoilRoot } from 'recoil';\nimport { ThemeProvider } from 'styled-components';\nimport { darkTheme } from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme:DefaultTheme = {\r\n  bgColor: 'linear-gradient(to top,rgb(225,238,195),rgb(255 111 114))',\r\n  textColor: 'white',\r\n  accentColor: '#00a8ff',\r\n  cardColor: '#2f3640',\r\n  cardBorderColor: 'whitesmoke',\r\n}\r\n"],"sourceRoot":""}